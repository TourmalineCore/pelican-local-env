name: E2E Tests Execution Against Local Env

on:
  push:
    branches:
      - feature/*

jobs:
  run-e2e-against-local-env:
    runs-on: ubuntu-24.04

    strategy:
      fail-fast: false
      matrix:
        node-version: [20.18.0]

    steps:
    - name: Checkout Local Env
      uses: actions/checkout@v4

    - name: Deploy Local Env to Kind k8s
      uses: devcontainers/ci@v0.3
      with:
        runCmd: |
          kind create cluster --name pelican --config kind-local-config.yaml --kubeconfig ./.pelican-cluster-kubeconfig
          helmfile cache cleanup && helmfile --environment local --namespace local -f deploy/helmfile.yaml apply
        # we don't need to push docker image that was built using our Dev Container
        push: never


    # PLAYWRIGHT CMS TESTS

    - name: Checkout Pelican CMS
      uses: actions/checkout@v4
      with:
        repository: TourmalineCore/pelican-cms

    - name: Cache node modules
      id: cache-nodemodules
      uses: actions/cache@v4
      env:
        cache-name: cache-node-modules
      with:
        path: node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
  
    # let's cache the binaries of installed browsers that we don't re-install them every time from scratch
    - name: Cache playwright browsers
      id: cache-playwrightbrowsers
      uses: actions/cache@v4
      env:
        cache-name: cache-playwright-browsers
      with:
        # caching browsers binaries
        # this path is taken from here https://playwright.dev/docs/browsers#managing-browser-binaries
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies for CMS
      if: steps.cache-nodemodules.outputs.cache-hit != 'true'
      run: npm ci

    - name: Install Playwright Browsers
      if: steps.cache-playwrightbrowsers.outputs.cache-hit != 'true'
      run: npx playwright install chromium --with-deps

    - name: Playwright run for CMS
      run: npx playwright test --reporter=html 
  
      env:
        FRONTEND_URL: http://localhost:40110 
        SERVER_URL: 'http://localhost:40110/cms'

    - name: Upload HTML report
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: html-report--attempt-${{ github.run_attempt }}
        path: playwright-report
        retention-days: 7
        
        
    # PLAYWRIGHT UI TESTS

    - name: Checkout Pelican UI
      uses: actions/checkout@v4
      with:
        repository: TourmalineCore/pelican-ui

    - name: Install dependencies for UI
      if: steps.cache-nodemodules.outputs.cache-hit != 'true'
      run: npm ci


    - name: Playwright run for UI
      run: npx playwright test --reporter=html 
  
      env:
        API_URL: "http://pelican-cms-nginx:40110/api"

    - name: Upload HTML report
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: html-report--attempt-${{ github.run_attempt }}
        path: playwright-report
        retention-days: 7
